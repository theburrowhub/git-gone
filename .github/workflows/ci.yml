name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.19', '1.20', '1.21']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
    
    - name: Get dependencies
      run: |
        go mod download
        go mod verify
    
    - name: Build
      run: go build -v ./...
    
    - name: Test build with version info
      run: |
        go build -ldflags "-X main.Version=test -X main.CommitHash=test -X main.BuildTime=test" -o git-gone .
        ./git-gone -v
        ./git-gone -h
    
    - name: Verify binary name
      run: |
        if [ ! -f "git-gone" ]; then
          echo "Error: Binary should be named 'git-gone'"
          exit 1
        fi

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.19'
    
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=5m

  build-all-platforms:
    name: Build All Platforms
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.19'
    
    - name: Build for all platforms
      run: |
        # Linux AMD64
        GOOS=linux GOARCH=amd64 go build -o git-gone-linux-amd64 .
        
        # Linux ARM64
        GOOS=linux GOARCH=arm64 go build -o git-gone-linux-arm64 .
        
        # macOS AMD64
        GOOS=darwin GOARCH=amd64 go build -o git-gone-macos-amd64 .
        
        # macOS ARM64
        GOOS=darwin GOARCH=arm64 go build -o git-gone-macos-arm64 .
        
        # Windows AMD64
        GOOS=windows GOARCH=amd64 go build -o git-gone-windows-amd64.exe .
        
        # Verify all binaries were created
        ls -la git-gone-*
