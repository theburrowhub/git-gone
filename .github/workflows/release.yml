name: Release and Build

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  version-and-tag:
    name: Calculate Version and Create Tag
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, '[skip ci]')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.19'
        
    - name: Install svu
      run: go install github.com/caarlos0/svu@latest
        
    - name: Calculate and create tag
      run: |
        CURRENT_VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
        NEXT_VERSION=$(svu next --strip-prefix)
        
        echo "Current version: ${CURRENT_VERSION}"
        echo "Next version: v${NEXT_VERSION}"
        
        if [ "v${NEXT_VERSION}" = "${CURRENT_VERSION}" ]; then
          echo "No version bump needed, skipping release"
          exit 0
        fi
        
        echo "Creating tag v${NEXT_VERSION}"
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag -a "v${NEXT_VERSION}" -m "Release v${NEXT_VERSION}"
        git push origin "v${NEXT_VERSION}"
        echo "Tag v${NEXT_VERSION} created and pushed"

  goreleaser:
    name: Release with GoReleaser
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.19'
        
    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v5
      with:
        distribution: goreleaser
        version: latest
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}