name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: [amd64, arm64]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.19'
    
    - name: Get version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        VERSION=${{ steps.version.outputs.VERSION }}
        COMMIT_HASH=$(git rev-parse --short HEAD)
        BUILD_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
        
        # Set OS name for output file
        if [ "${{ matrix.goos }}" = "darwin" ]; then
          OS_NAME="macos"
        else
          OS_NAME="${{ matrix.goos }}"
        fi
        
        # Build binary with version information
        go build -ldflags "-X main.Version=${VERSION} -X main.CommitHash=${COMMIT_HASH} -X main.BuildTime=${BUILD_TIME}" \
          -o git-gone-${OS_NAME}-${{ matrix.goarch }} .
        
        # Create tar.gz archive
        tar -czf git-gone-${OS_NAME}-${{ matrix.goarch }}.tar.gz git-gone-${OS_NAME}-${{ matrix.goarch }}
        
        # Create checksums
        sha256sum git-gone-${OS_NAME}-${{ matrix.goarch }} >> checksums.txt
        sha256sum git-gone-${OS_NAME}-${{ matrix.goarch }}.tar.gz >> checksums.txt
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: binaries
        path: |
          git-gone-*
          checksums.txt

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: binaries
        path: ./artifacts
    
    - name: Combine checksums
      run: |
        cd artifacts
        cat checksums.txt | sort -u > git-gone-checksums.txt
        rm checksums.txt
    
    - name: Get version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Extract changelog
      id: changelog
      run: |
        VERSION="${{ steps.version.outputs.VERSION }}"
        # Extract the current version's changelog
        CHANGELOG=$(awk -v ver="## \\[${VERSION#v}\\]" '
          $0 ~ ver { found=1; next }
          found && /^## \[/ { exit }
          found { print }
        ' CHANGELOG.md)
        
        # Save to file for release body
        echo "$CHANGELOG" > release_notes.md
        echo "Release ${{ steps.version.outputs.VERSION }}" >> release_notes.md
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        name: git-gone ${{ steps.version.outputs.VERSION }}
        body_path: release_notes.md
        draft: false
        prerelease: false
        files: |
          artifacts/git-gone-*